// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLeftRightBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnHome;

  @NonNull
  public final Button btnLeft;

  @NonNull
  public final Button btnPause;

  @NonNull
  public final Button btnReset;

  @NonNull
  public final Button btnRight;

  @NonNull
  public final Button btnStart;

  @NonNull
  public final RelativeLayout layBottomButtons;

  @NonNull
  public final RelativeLayout layLrButtons;

  @NonNull
  public final RelativeLayout layMenu;

  @NonNull
  public final ViewTimerBinding layTime;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RecyclerView rvLeftright;

  @NonNull
  public final RadioButton sec10;

  @NonNull
  public final RadioButton sec20;

  @NonNull
  public final RadioButton sec30;

  @NonNull
  public final TextView tvBestScore;

  @NonNull
  public final TextView tvScoreLeftright;

  private ActivityLeftRightBinding(@NonNull RelativeLayout rootView, @NonNull Button btnHome,
      @NonNull Button btnLeft, @NonNull Button btnPause, @NonNull Button btnReset,
      @NonNull Button btnRight, @NonNull Button btnStart, @NonNull RelativeLayout layBottomButtons,
      @NonNull RelativeLayout layLrButtons, @NonNull RelativeLayout layMenu,
      @NonNull ViewTimerBinding layTime, @NonNull RadioGroup radioGroup,
      @NonNull RecyclerView rvLeftright, @NonNull RadioButton sec10, @NonNull RadioButton sec20,
      @NonNull RadioButton sec30, @NonNull TextView tvBestScore,
      @NonNull TextView tvScoreLeftright) {
    this.rootView = rootView;
    this.btnHome = btnHome;
    this.btnLeft = btnLeft;
    this.btnPause = btnPause;
    this.btnReset = btnReset;
    this.btnRight = btnRight;
    this.btnStart = btnStart;
    this.layBottomButtons = layBottomButtons;
    this.layLrButtons = layLrButtons;
    this.layMenu = layMenu;
    this.layTime = layTime;
    this.radioGroup = radioGroup;
    this.rvLeftright = rvLeftright;
    this.sec10 = sec10;
    this.sec20 = sec20;
    this.sec30 = sec30;
    this.tvBestScore = tvBestScore;
    this.tvScoreLeftright = tvScoreLeftright;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLeftRightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLeftRightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_left_right, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLeftRightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_home;
      Button btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btn_left;
      Button btnLeft = ViewBindings.findChildViewById(rootView, id);
      if (btnLeft == null) {
        break missingId;
      }

      id = R.id.btn_pause;
      Button btnPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPause == null) {
        break missingId;
      }

      id = R.id.btn_reset;
      Button btnReset = ViewBindings.findChildViewById(rootView, id);
      if (btnReset == null) {
        break missingId;
      }

      id = R.id.btn_right;
      Button btnRight = ViewBindings.findChildViewById(rootView, id);
      if (btnRight == null) {
        break missingId;
      }

      id = R.id.btn_start;
      Button btnStart = ViewBindings.findChildViewById(rootView, id);
      if (btnStart == null) {
        break missingId;
      }

      id = R.id.lay_bottom_buttons;
      RelativeLayout layBottomButtons = ViewBindings.findChildViewById(rootView, id);
      if (layBottomButtons == null) {
        break missingId;
      }

      id = R.id.lay_lr_buttons;
      RelativeLayout layLrButtons = ViewBindings.findChildViewById(rootView, id);
      if (layLrButtons == null) {
        break missingId;
      }

      id = R.id.lay_menu;
      RelativeLayout layMenu = ViewBindings.findChildViewById(rootView, id);
      if (layMenu == null) {
        break missingId;
      }

      id = R.id.lay_time;
      View layTime = ViewBindings.findChildViewById(rootView, id);
      if (layTime == null) {
        break missingId;
      }
      ViewTimerBinding binding_layTime = ViewTimerBinding.bind(layTime);

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.rv_leftright;
      RecyclerView rvLeftright = ViewBindings.findChildViewById(rootView, id);
      if (rvLeftright == null) {
        break missingId;
      }

      id = R.id.sec_10;
      RadioButton sec10 = ViewBindings.findChildViewById(rootView, id);
      if (sec10 == null) {
        break missingId;
      }

      id = R.id.sec_20;
      RadioButton sec20 = ViewBindings.findChildViewById(rootView, id);
      if (sec20 == null) {
        break missingId;
      }

      id = R.id.sec_30;
      RadioButton sec30 = ViewBindings.findChildViewById(rootView, id);
      if (sec30 == null) {
        break missingId;
      }

      id = R.id.tv_best_score;
      TextView tvBestScore = ViewBindings.findChildViewById(rootView, id);
      if (tvBestScore == null) {
        break missingId;
      }

      id = R.id.tv_score_leftright;
      TextView tvScoreLeftright = ViewBindings.findChildViewById(rootView, id);
      if (tvScoreLeftright == null) {
        break missingId;
      }

      return new ActivityLeftRightBinding((RelativeLayout) rootView, btnHome, btnLeft, btnPause,
          btnReset, btnRight, btnStart, layBottomButtons, layLrButtons, layMenu, binding_layTime,
          radioGroup, rvLeftright, sec10, sec20, sec30, tvBestScore, tvScoreLeftright);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
