// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConnTestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonClear;

  @NonNull
  public final Button buttonCloseserver;

  @NonNull
  public final Button buttonConnect;

  @NonNull
  public final Button buttonDisconnect;

  @NonNull
  public final Button buttonMsg;

  @NonNull
  public final Button buttonSetserver;

  @NonNull
  public final EditText etIp;

  @NonNull
  public final EditText etMsg;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText etPort;

  @NonNull
  public final ScrollView sv;

  @NonNull
  public final TextView textStatus;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  private ActivityConnTestBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonClear,
      @NonNull Button buttonCloseserver, @NonNull Button buttonConnect,
      @NonNull Button buttonDisconnect, @NonNull Button buttonMsg, @NonNull Button buttonSetserver,
      @NonNull EditText etIp, @NonNull EditText etMsg, @NonNull EditText etName,
      @NonNull EditText etPort, @NonNull ScrollView sv, @NonNull TextView textStatus,
      @NonNull TextView textView, @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.buttonClear = buttonClear;
    this.buttonCloseserver = buttonCloseserver;
    this.buttonConnect = buttonConnect;
    this.buttonDisconnect = buttonDisconnect;
    this.buttonMsg = buttonMsg;
    this.buttonSetserver = buttonSetserver;
    this.etIp = etIp;
    this.etMsg = etMsg;
    this.etName = etName;
    this.etPort = etPort;
    this.sv = sv;
    this.textStatus = textStatus;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConnTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConnTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_conn_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConnTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_clear;
      Button buttonClear = ViewBindings.findChildViewById(rootView, id);
      if (buttonClear == null) {
        break missingId;
      }

      id = R.id.button_closeserver;
      Button buttonCloseserver = ViewBindings.findChildViewById(rootView, id);
      if (buttonCloseserver == null) {
        break missingId;
      }

      id = R.id.button_connect;
      Button buttonConnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonConnect == null) {
        break missingId;
      }

      id = R.id.button_disconnect;
      Button buttonDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonDisconnect == null) {
        break missingId;
      }

      id = R.id.button_msg;
      Button buttonMsg = ViewBindings.findChildViewById(rootView, id);
      if (buttonMsg == null) {
        break missingId;
      }

      id = R.id.button_setserver;
      Button buttonSetserver = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetserver == null) {
        break missingId;
      }

      id = R.id.et_ip;
      EditText etIp = ViewBindings.findChildViewById(rootView, id);
      if (etIp == null) {
        break missingId;
      }

      id = R.id.et_msg;
      EditText etMsg = ViewBindings.findChildViewById(rootView, id);
      if (etMsg == null) {
        break missingId;
      }

      id = R.id.et_name;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_port;
      EditText etPort = ViewBindings.findChildViewById(rootView, id);
      if (etPort == null) {
        break missingId;
      }

      id = R.id.sv;
      ScrollView sv = ViewBindings.findChildViewById(rootView, id);
      if (sv == null) {
        break missingId;
      }

      id = R.id.text_status;
      TextView textStatus = ViewBindings.findChildViewById(rootView, id);
      if (textStatus == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityConnTestBinding((ConstraintLayout) rootView, buttonClear,
          buttonCloseserver, buttonConnect, buttonDisconnect, buttonMsg, buttonSetserver, etIp,
          etMsg, etName, etPort, sv, textStatus, textView, textView2, textView3, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
