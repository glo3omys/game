// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScavListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnGotoBack;

  @NonNull
  public final RelativeLayout btnLayout;

  @NonNull
  public final Button btnMultidel;

  @NonNull
  public final Button btnSelectAll;

  @NonNull
  public final RecyclerView rvScavlist;

  private ActivityScavListBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnGotoBack, @NonNull RelativeLayout btnLayout, @NonNull Button btnMultidel,
      @NonNull Button btnSelectAll, @NonNull RecyclerView rvScavlist) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnGotoBack = btnGotoBack;
    this.btnLayout = btnLayout;
    this.btnMultidel = btnMultidel;
    this.btnSelectAll = btnSelectAll;
    this.rvScavlist = rvScavlist;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScavListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScavListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scav_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScavListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btn_goto_back;
      Button btnGotoBack = ViewBindings.findChildViewById(rootView, id);
      if (btnGotoBack == null) {
        break missingId;
      }

      id = R.id.btn_layout;
      RelativeLayout btnLayout = ViewBindings.findChildViewById(rootView, id);
      if (btnLayout == null) {
        break missingId;
      }

      id = R.id.btn_multidel;
      Button btnMultidel = ViewBindings.findChildViewById(rootView, id);
      if (btnMultidel == null) {
        break missingId;
      }

      id = R.id.btn_select_all;
      Button btnSelectAll = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectAll == null) {
        break missingId;
      }

      id = R.id.rv_scavlist;
      RecyclerView rvScavlist = ViewBindings.findChildViewById(rootView, id);
      if (rvScavlist == null) {
        break missingId;
      }

      return new ActivityScavListBinding((ConstraintLayout) rootView, btnAdd, btnGotoBack,
          btnLayout, btnMultidel, btnSelectAll, rvScavlist);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
